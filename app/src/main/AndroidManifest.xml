<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.coodays.pushservicelibrary">

  <application
      android:allowBackup="true"
      android:name="MyApplication"
      android:icon="@mipmap/ic_launcher"
      android:label="@string/app_name"
      android:supportsRtl="true"
      android:theme="@style/AppTheme">
    <activity android:name=".MainActivity">
      <intent-filter>
        <action android:name="android.intent.action.MAIN"/>

        <category android:name="android.intent.category.LAUNCHER"/>
      </intent-filter>
    </activity>



    <!-- 云信 -->
    <!--
      APP key, 可以在这里设置，也可以在 SDKOptions 中提供。
      如果 SDKOptions 中提供了，取 SDKOptions 中的值。
        -->
    <meta-data
        android:name="com.netease.nim.appKey"
        android:value="aca00f3be88dfe5de5d00fda44fc0113"/>

    <!-- 声明云信后台服务，如需保持后台推送，使用独立进程效果会更好。 -->
    <service
        android:name="com.netease.nimlib.service.NimService"
        android:process=":core"/>
    <service
        android:name="com.netease.nimlib.service.NimService$Aux"
        android:process=":core"/>

    <!--
         云信SDK的监视系统启动和网络变化的广播接收器，用户开机自启动以及网络变化时候重新登录，
        保持和 NimService 同一进程
        -->
    <receiver
        android:name="com.netease.nimlib.service.NimReceiver"
        android:exported="false"
        android:process=":core">
      <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED"/>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
      </intent-filter>
    </receiver>

    <!-- 云信进程间通信 Receiver -->
    <receiver android:name="com.netease.nimlib.service.ResponseReceiver"/>

    <!-- 安卓保活配置 -->
    <service
        android:name="com.netease.cosine.core.CosineService"
        android:process=":cosine"/>

    <receiver
        android:name="com.netease.cosine.target.CosineReceiver"
        android:exported="true"
        android:process=":cosine"/>

    <meta-data
        android:name="com.netease.cosine.target"
        android:value=""/>
    <meta-data
        android:name="com.netease.cosine.target.receiver"
        android:value="com.netease.nimlib.service.NimReceiver"/>
    <!-- 云信end -->


    <!-- miui -->
    <service
        android:name="com.xiaomi.push.service.XMPushService"
        android:enabled="true"
        android:process=":pushservice"/>
    <service
        android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
        android:enabled="true"
        android:exported="true"/>
    <service
        android:name="com.xiaomi.mipush.sdk.MessageHandleService"
        android:enabled="true"/>
    <!-- 注：此service必须在2.2.5版本以后（包括2.2.5版本）加入 -->
    <receiver
        android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
        android:exported="true">
      <intent-filter>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>

        <category android:name="android.intent.category.DEFAULT"/>
      </intent-filter>
    </receiver>
    <receiver
        android:name="com.xiaomi.push.service.receivers.PingReceiver"
        android:exported="false"
        android:process=":pushservice">
      <intent-filter>
        <action android:name="com.xiaomi.push.PING_TIMER"/>
      </intent-filter>
    </receiver>
    <receiver
        android:name="com.coodays.pushservicelib.push.MiuiPushMessageReceiver"
        android:exported="true">

      <!-- 这里com.xiaomi.mipushdemo.DemoMessageRreceiver改成app中定义的完整类名 -->
      <intent-filter>
        <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE"/>
      </intent-filter>
      <intent-filter>
        <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED"/>
      </intent-filter>
      <intent-filter>
        <action android:name="com.xiaomi.mipush.ERROR"/>
      </intent-filter>
    </receiver>
    <!-- 小米推送end -->


    <!-- 华为推送 -->
    <!-- 第三方相关 :接收Push消息（注册、Push消息、Push连接状态、标签，LBS上报结果）广播 -->
    <receiver android:name="com.coodays.pushservicelib.push.HuaweiPushMessageReceiver">
      <intent-filter>

        <!-- 必须,用于接收token -->
        <action android:name="com.huawei.android.push.intent.REGISTRATION"/>
        <!-- 必须，用于接收消息 -->
        <action android:name="com.huawei.android.push.intent.RECEIVE"/>
        <!-- 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调 -->
        <action android:name="com.huawei.android.push.intent.CLICK"/>
        <!-- 可选，查看push通道是否连接，不查看则不需要 -->
        <action android:name="com.huawei.intent.action.PUSH_STATE"/>
        <!-- 可选，标签、地理位置上报回应，不上报则不需要 -->
        <action android:name="com.huawei.android.push.plugin.RESPONSE"/>
      </intent-filter>

      <meta-data
          android:name="CS_cloud_ablitity"
          android:value="@string/hwpush_ability_value"/>
    </receiver>

    <!--
       备注：Push相关的android组件需要添加到业务的AndroidManifest.xml,
       Push相关android组件运行在另外一个进程是为了防止Push服务异常而影响主业务
        -->


    <!-- PushSDK:PushSDK接收外部请求事件入口 -->
    <receiver
        android:name="com.huawei.android.pushagent.PushEventReceiver"
        android:process=":pushservice">
      <intent-filter>
        <action android:name="com.huawei.android.push.intent.REFRESH_PUSH_CHANNEL"/>
        <action android:name="com.huawei.intent.action.PUSH"/>
        <action android:name="com.huawei.intent.action.PUSH_ON"/>
        <action android:name="com.huawei.android.push.PLUGIN"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.PACKAGE_ADDED"/>
        <action android:name="android.intent.action.PACKAGE_REMOVED"/>

        <data android:scheme="package"/>
      </intent-filter>
    </receiver>
    <receiver
        android:name="com.huawei.android.pushagent.PushBootReceiver"
        android:process=":pushservice">
      <intent-filter>
        <action android:name="com.huawei.android.push.intent.REGISTER"/>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
      </intent-filter>

      <meta-data
          android:name="CS_cloud_version"
          android:value="\u0032\u0037\u0030\u0035"/>
    </receiver>

    <!-- PushSDK:Push服务 -->
    <service
        android:name="com.huawei.android.pushagent.PushService"
        android:process=":pushservice">
    </service>

    <!-- PushSDK:富媒体呈现页面，用于呈现服务器下发的富媒体消息 -->
    <!-- locale|layoutDirection 切换语言后不重新创建activity -->
    <activity
        android:name="com.huawei.android.pushselfshow.richpush.RichPushActivity"
        android:configChanges="orientation|screenSize|locale|layoutDirection"
        android:process=":pushservice"
        android:screenOrientation="portrait"
        android:theme="@style/hwpush_NoActionBar">
      <meta-data
          android:name="hwc-theme"
          android:value="androidhwext:style/Theme.Emui"/>

      <intent-filter>
        <action android:name="com.huawei.android.push.intent.RICHPUSH"/>

        <category android:name="android.intent.category.DEFAULT"/>
      </intent-filter>
    </activity>
    <activity
        android:name="com.huawei.android.pushselfshow.permission.RequestPermissionsActivity"
        android:configChanges="orientation|screenSize|locale|layoutDirection"
        android:exported="false"
        android:launchMode="singleTop"
        android:screenOrientation="portrait"
        android:theme="@android:style/Theme.DeviceDefault.Light.Dialog.NoActionBar">
    </activity>
    <!-- 华为推送end -->

  </application>



  <!-- 云信 -->
  <!-- 权限声明 -->
  <!-- 访问网络状态 -->
  <uses-permission android:name="android.permission.INTERNET"/>
  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
  <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
  <!-- 控制呼吸灯，振动器等，用于新消息提醒 -->
  <uses-permission android:name="android.permission.FLASHLIGHT"/>
  <uses-permission android:name="android.permission.VIBRATE"/>
  <!-- 外置存储存取权限 -->
  <!-- 多媒体相关 -->
  <uses-permission android:name="android.permission.CAMERA"/>
  <uses-permission android:name="android.permission.RECORD_AUDIO"/>
  <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
  <!-- SDK 权限申明, 第三方 APP 接入时，请将 com.netease.nim.demo 替换为自己的包名 -->
  <!-- 和下面的 uses-permission 一起加入到你的 AndroidManifest 文件中。 -->
  <permission
      android:name="com.coodays.pushservicelibrary.permission.RECEIVE_MSG"
      android:protectionLevel="signature"/>
  <!-- 接收 SDK 消息广播权限， 第三方 APP 接入时，请将 com.netease.nim.demo 替换为自己的包名 -->
  <uses-permission android:name="com.coodays.pushtest.permission.RECEIVE_MSG"/>
  <!-- 云信end -->


  <!-- 小米 -->
    <uses-permission android:name="android.permission.INTERNET"/>
   <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
   <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
   <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
   <uses-permission android:name="android.permission.GET_TASKS"/>
   <uses-permission android:name="android.permission.VIBRATE"/>

  <permission
      android:name="com.coodays.pushservicelibrary.permission.MIPUSH_RECEIVE"
      android:protectionLevel="signature"/>
  <!-- 这里com.xiaomi.mipushdemo改成app的包名 -->
  <uses-permission android:name="com.coodays.pushtest.permission.MIPUSH_RECEIVE"/>
  <!-- 这里com.xiaomi.mipushdemo改成app的包名 -->
  <!-- 小米 -->


  <!-- 华为 -->
  <uses-permission android:name="android.permission.WAKE_LOCK"/>
  <!-- 根据地理位置推送消息需要事先上报地理位置信息，需要如下权限，不上报则不需要， -->
  <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>

  <!-- 访问Push APK provider需要的权限，SDK富媒体需要,无富媒体功能则不需要 -->
  <uses-permission android:name="com.huawei.pushagent.permission.RICHMEDIA_PROVIDER"/>
  <!-- 华为end -->


</manifest>